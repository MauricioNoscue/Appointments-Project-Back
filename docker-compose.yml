services:
  api:
    build:
      context: .
      dockerfile: ./Web_back/Dockerfile
    ports:
      - "8080:5001"
    environment:
      DatabaseProvider: "sqlserver"
      ConnectionStrings__DefaultConnection: "Server=sql,1433;Database=proyectoCtT;User Id=sa;Password=NuevaPass123!;TrustServerCertificate=true;Encrypt=false"
      ConnectionStrings__Postgres: "Host=postgres;Port=5432;Database=proyectoCtT;Username=postgres;Password=postgres"
      ConnectionStrings__MySql: "Server=mysql;Port=3306;Database=proyectoCtT;User=root;Password=Root123!"
      ConnectionStrings__Redis: "redis:6379"   # ðŸ‘ˆ ahora apunta al servicio redis
    depends_on:
      sql:
        condition: service_healthy
      postgres:
        condition: service_healthy
      mysql:
        condition: service_healthy
      redis:
        condition: service_started

  migrator:
    image: mcr.microsoft.com/dotnet/sdk:8.0
    working_dir: /src
    volumes:
      - ./:/src
    environment:
      ConnectionStrings__DefaultConnection: "Server=sql,1433;Database=proyectoCtT;User Id=sa;Password=NuevaPass123!;TrustServerCertificate=true;Encrypt=false"
      ConnectionStrings__Postgres: "Host=postgres;Port=5432;Database=proyectoCtT;Username=postgres;Password=postgres"
      ConnectionStrings__MySql: "Server=mysql;Port=3306;Database=proyectoCtT;User=root;Password=Root123!"
      ConnectionStrings__Redis: "redis:6379"
    depends_on:
      sql:
        condition: service_healthy
      postgres:
        condition: service_healthy
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    command: >
      bash -c "
        dotnet tool install --global dotnet-ef &&
        echo '==> Migrando SQL Server' &&
        DatabaseProvider=sqlserver /root/.dotnet/tools/dotnet-ef database update --project ./Entity-Back/Entity-Back.csproj --startup-project ./Web_back/Web_back.csproj --context ApplicationDbContext &&
        echo '==> Migrando Postgres' &&
        DatabaseProvider=postgres /root/.dotnet/tools/dotnet-ef database update --project ./Entity-Back/Entity-Back.csproj --startup-project ./Web_back/Web_back.csproj --context ApplicationDbContext &&
        echo '==> Migrando MySQL' &&
        DatabaseProvider=mysql /root/.dotnet/tools/dotnet-ef database update --project ./Entity-Back/Entity-Back.csproj --startup-project ./Web_back/Web_back.csproj --context ApplicationDbContext
      "

  sql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "TuPass123!"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/1433"]
      interval: 5s
      timeout: 3s
      retries: 30
    volumes:
      - sql_data:/var/opt/mssql

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "proyectoCtT"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 3s
      retries: 30
    volumes:
      - pg_data:/var/lib/postgresql/data

  mysql:
    image: mysql:8.4
    environment:
      MYSQL_ROOT_PASSWORD: "Root123!"
      MYSQL_DATABASE: "proyectoCtT"
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-pRoot123!"]
      interval: 5s
      timeout: 3s
      retries: 30
    volumes:
      - mysql_data:/var/lib/mysql

  redis:   # ðŸ‘ˆ nuevo servicio
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  nginx:
    image: nginx:latest
    ports:
      - "8082:80"
      - "8443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - api

volumes:
  sql_data:
  pg_data:
  mysql_data:
  redis_data:
